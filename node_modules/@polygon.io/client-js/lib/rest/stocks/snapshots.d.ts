import { IPolygonQuery } from "../transport/request";
export interface SnapshotDay {
    c?: number;
    h?: number;
    l?: number;
    o?: number;
    v?: number;
    vw?: number;
}
export interface SnapshotLastQuote {
    P?: number;
    S?: number;
    p?: number;
    s?: number;
    t?: number;
}
export interface SnapshotLastTrade {
    c?: string[];
    i?: string;
    p?: number;
    s?: number;
    t?: number;
    x?: number;
}
export interface SnapshotMin {
    av?: number;
    c?: number;
    h?: number;
    l?: number;
    o?: number;
    v?: number;
    vw?: number;
}
export interface SnapshotPrevDay {
    c?: number;
    h?: number;
    l?: number;
    o?: number;
    v?: number;
    vw?: number;
}
export interface SnapshotInfo {
    day?: SnapshotDay;
    lastQuote?: SnapshotLastQuote;
    lastTrade?: SnapshotLastTrade;
    min?: SnapshotMin;
    prevDay?: SnapshotPrevDay;
    ticker?: string;
    todaysChange?: number;
    todaysChangePerc?: number;
    updated?: number;
}
export interface ISnapshotAllTickersQuery extends IPolygonQuery {
    tickers?: string;
}
export interface ISnapshotTickers {
    count?: number;
    status?: string;
    tickers?: SnapshotInfo[];
}
export interface ISnapshot {
    status?: string;
    request_id?: string;
    ticker?: SnapshotInfo;
}
export declare const snapshotAllTickers: (apiKey: string, apiBase: string, query?: ISnapshotAllTickersQuery) => Promise<ISnapshotTickers>;
export declare const snapshotGainersLosers: (apiKey: string, apiBase: string, direction: "gainers" | "losers") => Promise<ISnapshotTickers>;
export declare const snapshotTicker: (apiKey: string, apiBase: string, symbol: string) => Promise<ISnapshot>;
