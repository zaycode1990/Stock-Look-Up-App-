import { IPolygonQuery } from "../transport/request";
export interface SnapshotDay {
    c?: number;
    h?: number;
    l?: number;
    o?: number;
    v?: number;
}
export interface SnapshotLastQuote {
    a?: number;
    b?: number;
    t?: number;
    x?: number;
}
export interface SnapshotMin {
    c?: number;
    h?: number;
    l?: number;
    o?: number;
    v?: number;
}
export interface SnapshotPrevDay {
    c?: number;
    h?: number;
    l?: number;
    o?: number;
    v?: number;
    vw?: number;
}
export interface SnapshotInfo {
    day?: SnapshotDay;
    lastQuote?: SnapshotLastQuote;
    min?: SnapshotMin;
    prevDay?: SnapshotPrevDay;
    ticker?: string;
    todaysChange?: number;
    todayChangePerc?: number;
    updated?: number;
}
export interface IForexSnapshotAllTickersQuery extends IPolygonQuery {
    tickers?: string;
}
export interface IForexSnapshotTickers {
    count?: number;
    status?: string;
    tickers?: SnapshotInfo[];
}
export interface IForexSnapshot {
    status?: string;
    request_id?: string;
    ticker?: SnapshotInfo;
}
export declare const snapshotAllTickers: (apiKey: string, apiBase: string, query?: IForexSnapshotAllTickersQuery) => Promise<IForexSnapshotTickers>;
export declare const snapshotGainersLosers: (apiKey: string, apiBase: string, direction: "gainers" | "losers") => Promise<IForexSnapshotTickers>;
export declare const snapshotTicker: (apiKey: string, apiBase: string, symbol: string) => Promise<IForexSnapshot>;
