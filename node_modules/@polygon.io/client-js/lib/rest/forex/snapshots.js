"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.snapshotTicker = exports.snapshotGainersLosers = exports.snapshotAllTickers = void 0;
const request_1 = require("../transport/request");
// CF: https://polygon.io/docs/forex/get_v2_snapshot_locale_global_markets_forex_tickers
const snapshotAllTickers = (apiKey, apiBase, query) => __awaiter(void 0, void 0, void 0, function* () {
    return (0, request_1.get)(`/v2/snapshot/locale/global/markets/forex/tickers`, apiKey, apiBase, query);
});
exports.snapshotAllTickers = snapshotAllTickers;
// CF: https://polygon.io/docs/forex/get_v2_snapshot_locale_global_markets_forex__direction
const snapshotGainersLosers = (apiKey, apiBase, direction) => __awaiter(void 0, void 0, void 0, function* () { return (0, request_1.get)(`/v2/snapshot/locale/global/markets/forex/${direction}`, apiKey, apiBase); });
exports.snapshotGainersLosers = snapshotGainersLosers;
// CF: https://polygon.io/docs/forex/get_v2_snapshot_locale_global_markets_forex_tickers__ticker
const snapshotTicker = (apiKey, apiBase, symbol) => __awaiter(void 0, void 0, void 0, function* () {
    return (0, request_1.get)(`/v2/snapshot/locale/global/markets/forex/tickers/${symbol}`, apiKey, apiBase);
});
exports.snapshotTicker = snapshotTicker;
