import { IPolygonQuery } from "../transport/request";
export interface IOptionsContractQuery extends IPolygonQuery {
    as_of?: string;
}
export interface IAdditionalUnderlyings {
    amount: number;
    type: string;
    underlying: string;
}
export interface IOptionsContractResults {
    additional_underlyings: IAdditionalUnderlyings[];
    cfi?: string;
    contract_type?: string;
    correction?: string;
    exercise_style?: string;
    expiration_date?: string;
    primary_exchange?: string;
    shares_per_contract?: number;
    strike_price?: number;
    ticker?: string;
    underlying_ticker?: string;
}
export interface IOptionsContract {
    request_id?: string;
    results?: IOptionsContractResults[];
    status?: string;
}
export declare const optionsContract: (apiKey: string, apiBase: string, optionsTicker: string, query?: IOptionsContractQuery) => Promise<IOptionsContract>;
